{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hi\\\\Documents\\\\SMU\\\\Y2S1\\\\CS203 Collaborative Software Development\\\\Project\\\\CS203-OnlyFence\\\\frontend\\\\main\\\\src\\\\Components\\\\Admin\\\\VerifyOrganiser.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Pagination from \"../Others/Pagination.jsx\";\n\n/*\r\n- Submit Button\r\n- Integrate with Backend\r\n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function VerifyOrganiser() {\n  _s();\n  const [organisers, setOrganisers] = useState([]); // State to store fetched organisers\n  const [currentPage, setCurrentPage] = useState(1); // State for current page\n  const [totalPages, setTotalPages] = useState(1); // State for total pages\n  const limit = 10; // Number of organisers per page\n\n  // Store Array of Approved/Denied Organisers (to send Backend)\n  const [checkboxState, setCheckboxState] = useState({}); // State to track checkboxes\n\n  // Sample data for unverified organisers\n  const allOrganisers = Array.from({\n    length: 50\n  }, (_, index) => ({\n    id: index + 1,\n    name: `Organisation ${index + 1}`,\n    email: `organisation${index + 1}@example.com`\n  }));\n\n  // Effect to update the organisers and total pages based on current page\n  useEffect(() => {\n    const startIndex = (currentPage - 1) * limit; // Calculate start index\n    const endIndex = startIndex + limit; // Calculate end index\n    setOrganisers(allOrganisers.slice(startIndex, endIndex)); // Set organisers for the current page\n    setTotalPages(Math.ceil(allOrganisers.length / limit)); // Calculate total pages\n  }, [currentPage]);\n\n  // Handle page change from Pagination component\n  const handlePageChange = page => {\n    setCurrentPage(page);\n  };\n\n  // Function to handle checkbox changes\n  const handleCheckboxChange = (id, type) => {\n    setCheckboxState(prev => {\n      const newState = {\n        ...prev\n      };\n\n      // If the organiser ID doesn't exist in the state, initialize it\n      if (!newState[id]) {\n        newState[id] = undefined; // Start with no selection\n      }\n\n      // Toggle checkbox state\n      if (type === 'approve') {\n        newState[id] = newState[id] === 'approved' ? undefined : 'approved'; // Toggle between approved and undefined\n      } else if (type === 'deny') {\n        newState[id] = newState[id] === 'denied' ? undefined : 'denied'; // Toggle between denied and undefined\n      }\n\n      // If both checkboxes are toggled, set to newState\n      // If checkbox untoggled, set to undefined\n      if (newState[id] === 'approved' && prev[id] === 'denied') {\n        newState[id] = 'approved'; // Approve overrides deny\n      } else if (newState[id] === 'denied' && prev[id] === 'approved') {\n        newState[id] = 'denied'; // Deny overrides approve\n      } else if (newState[id] === undefined) {\n        delete newState[id]; // Remove entry if undefined (no selection)\n      }\n\n      // Log the current state of all checkboxes\n      console.log('Current Checkbox States:', newState);\n      return newState;\n    });\n    console.log(`Organiser ID: ${id} - Action: ${type}`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-center items-center gap-10 p-8\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold\",\n      children: \"Verify Organisers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table text-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"text-lg\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Organisation\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: organisers.map(organiser => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: organiser.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: organiser.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"flex gap-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: checkboxState[organiser.id] === 'approved' // Control checkbox state\n                ,\n                onChange: () => handleCheckboxChange(organiser.id, 'approve')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2\",\n                children: \"Approve\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"flex items-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                checked: checkboxState[organiser.id] === 'denied' // Control checkbox state\n                ,\n                onChange: () => handleCheckboxChange(organiser.id, 'deny')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"ml-2\",\n                children: \"Deny\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this)]\n        }, organiser.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPages: totalPages,\n      buttonSize: \"w-10 h-10\",\n      currentPage: currentPage,\n      onPageChange: handlePageChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n_s(VerifyOrganiser, \"JHG1UKzb6VTTsjLuRD4qqVJ588I=\");\n_c = VerifyOrganiser;\nvar _c;\n$RefreshReg$(_c, \"VerifyOrganiser\");","map":{"version":3,"names":["React","useEffect","useState","Pagination","jsxDEV","_jsxDEV","VerifyOrganiser","_s","organisers","setOrganisers","currentPage","setCurrentPage","totalPages","setTotalPages","limit","checkboxState","setCheckboxState","allOrganisers","Array","from","length","_","index","id","name","email","startIndex","endIndex","slice","Math","ceil","handlePageChange","page","handleCheckboxChange","type","prev","newState","undefined","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","organiser","checked","onChange","buttonSize","onPageChange","_c","$RefreshReg$"],"sources":["C:/Users/hi/Documents/SMU/Y2S1/CS203 Collaborative Software Development/Project/CS203-OnlyFence/frontend/main/src/Components/Admin/VerifyOrganiser.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Pagination from \"../Others/Pagination.jsx\";\r\n\r\n/*\r\n- Submit Button\r\n- Integrate with Backend\r\n*/\r\nexport default function VerifyOrganiser() {\r\n    const [organisers, setOrganisers] = useState([]); // State to store fetched organisers\r\n    const [currentPage, setCurrentPage] = useState(1); // State for current page\r\n    const [totalPages, setTotalPages] = useState(1); // State for total pages\r\n    const limit = 10; // Number of organisers per page\r\n\r\n    // Store Array of Approved/Denied Organisers (to send Backend)\r\n    const [checkboxState, setCheckboxState] = useState({}); // State to track checkboxes\r\n\r\n    // Sample data for unverified organisers\r\n    const allOrganisers = Array.from({ length: 50 }, (_, index) => ({\r\n        id: index + 1,\r\n        name: `Organisation ${index + 1}`,\r\n        email: `organisation${index + 1}@example.com`,\r\n    }));\r\n\r\n    // Effect to update the organisers and total pages based on current page\r\n    useEffect(() => {\r\n        const startIndex = (currentPage - 1) * limit; // Calculate start index\r\n        const endIndex = startIndex + limit; // Calculate end index\r\n        setOrganisers(allOrganisers.slice(startIndex, endIndex)); // Set organisers for the current page\r\n        setTotalPages(Math.ceil(allOrganisers.length / limit)); // Calculate total pages\r\n    }, [currentPage]);\r\n\r\n    // Handle page change from Pagination component\r\n    const handlePageChange = (page) => {\r\n        setCurrentPage(page);\r\n    };\r\n\r\n    // Function to handle checkbox changes\r\n    const handleCheckboxChange = (id, type) => {\r\n        setCheckboxState((prev) => {\r\n            const newState = { ...prev };\r\n\r\n            // If the organiser ID doesn't exist in the state, initialize it\r\n            if (!newState[id]) {\r\n                newState[id] = undefined; // Start with no selection\r\n            }\r\n\r\n            // Toggle checkbox state\r\n            if (type === 'approve') {\r\n                newState[id] = newState[id] === 'approved' ? undefined : 'approved'; // Toggle between approved and undefined\r\n            } else if (type === 'deny') {\r\n                newState[id] = newState[id] === 'denied' ? undefined : 'denied'; // Toggle between denied and undefined\r\n            }\r\n\r\n            // If both checkboxes are toggled, set to newState\r\n            // If checkbox untoggled, set to undefined\r\n            if (newState[id] === 'approved' && prev[id] === 'denied') {\r\n                newState[id] = 'approved'; // Approve overrides deny\r\n            } else if (newState[id] === 'denied' && prev[id] === 'approved') {\r\n                newState[id] = 'denied'; // Deny overrides approve\r\n            } else if (newState[id] === undefined) {\r\n                delete newState[id]; // Remove entry if undefined (no selection)\r\n            }\r\n\r\n            // Log the current state of all checkboxes\r\n            console.log('Current Checkbox States:', newState);\r\n\r\n            return newState;\r\n        });\r\n\r\n        console.log(`Organiser ID: ${id} - Action: ${type}`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"flex flex-col justify-center items-center gap-10 p-8\">\r\n            <h1 className=\"text-4xl font-bold\">Verify Organisers</h1>\r\n            <table className=\"table text-lg\">\r\n                <thead>\r\n                    <tr className=\"text-lg\">\r\n                        <th>Organisation</th>\r\n                        <th>Email</th>\r\n                        <th>Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {organisers.map((organiser) => (\r\n                        <tr key={organiser.id}>\r\n                            <td>{organiser.name}</td>\r\n                            <td>{organiser.email}</td>\r\n                            <td className=\"flex gap-4\">\r\n                                <label className=\"flex items-center\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={checkboxState[organiser.id] === 'approved'} // Control checkbox state\r\n                                        onChange={() => handleCheckboxChange(organiser.id, 'approve')}\r\n                                    />\r\n                                    <span className=\"ml-2\">Approve</span>\r\n                                </label>\r\n                                <label className=\"flex items-center\">\r\n                                    <input\r\n                                        type=\"checkbox\"\r\n                                        checked={checkboxState[organiser.id] === 'denied'} // Control checkbox state\r\n                                        onChange={() => handleCheckboxChange(organiser.id, 'deny')}\r\n                                    />\r\n                                    <span className=\"ml-2\">Deny</span>\r\n                                </label>\r\n                            </td>\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n            <Pagination \r\n                totalPages={totalPages} \r\n                buttonSize=\"w-10 h-10\"\r\n                currentPage={currentPage} \r\n                onPageChange={handlePageChange} \r\n            />\r\n        </div>\r\n    );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,0BAA0B;;AAEjD;AACA;AACA;AACA;AAHA,SAAAC,MAAA,IAAAC,OAAA;AAIA,eAAe,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACnD,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EACjD,MAAMY,KAAK,GAAG,EAAE,CAAC,CAAC;;EAElB;EACA,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAExD;EACA,MAAMe,aAAa,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,MAAM;IAC5DC,EAAE,EAAED,KAAK,GAAG,CAAC;IACbE,IAAI,EAAE,gBAAgBF,KAAK,GAAG,CAAC,EAAE;IACjCG,KAAK,EAAE,eAAeH,KAAK,GAAG,CAAC;EACnC,CAAC,CAAC,CAAC;;EAEH;EACArB,SAAS,CAAC,MAAM;IACZ,MAAMyB,UAAU,GAAG,CAAChB,WAAW,GAAG,CAAC,IAAII,KAAK,CAAC,CAAC;IAC9C,MAAMa,QAAQ,GAAGD,UAAU,GAAGZ,KAAK,CAAC,CAAC;IACrCL,aAAa,CAACQ,aAAa,CAACW,KAAK,CAACF,UAAU,EAAEC,QAAQ,CAAC,CAAC,CAAC,CAAC;IAC1Dd,aAAa,CAACgB,IAAI,CAACC,IAAI,CAACb,aAAa,CAACG,MAAM,GAAGN,KAAK,CAAC,CAAC,CAAC,CAAC;EAC5D,CAAC,EAAE,CAACJ,WAAW,CAAC,CAAC;;EAEjB;EACA,MAAMqB,gBAAgB,GAAIC,IAAI,IAAK;IAC/BrB,cAAc,CAACqB,IAAI,CAAC;EACxB,CAAC;;EAED;EACA,MAAMC,oBAAoB,GAAGA,CAACV,EAAE,EAAEW,IAAI,KAAK;IACvClB,gBAAgB,CAAEmB,IAAI,IAAK;MACvB,MAAMC,QAAQ,GAAG;QAAE,GAAGD;MAAK,CAAC;;MAE5B;MACA,IAAI,CAACC,QAAQ,CAACb,EAAE,CAAC,EAAE;QACfa,QAAQ,CAACb,EAAE,CAAC,GAAGc,SAAS,CAAC,CAAC;MAC9B;;MAEA;MACA,IAAIH,IAAI,KAAK,SAAS,EAAE;QACpBE,QAAQ,CAACb,EAAE,CAAC,GAAGa,QAAQ,CAACb,EAAE,CAAC,KAAK,UAAU,GAAGc,SAAS,GAAG,UAAU,CAAC,CAAC;MACzE,CAAC,MAAM,IAAIH,IAAI,KAAK,MAAM,EAAE;QACxBE,QAAQ,CAACb,EAAE,CAAC,GAAGa,QAAQ,CAACb,EAAE,CAAC,KAAK,QAAQ,GAAGc,SAAS,GAAG,QAAQ,CAAC,CAAC;MACrE;;MAEA;MACA;MACA,IAAID,QAAQ,CAACb,EAAE,CAAC,KAAK,UAAU,IAAIY,IAAI,CAACZ,EAAE,CAAC,KAAK,QAAQ,EAAE;QACtDa,QAAQ,CAACb,EAAE,CAAC,GAAG,UAAU,CAAC,CAAC;MAC/B,CAAC,MAAM,IAAIa,QAAQ,CAACb,EAAE,CAAC,KAAK,QAAQ,IAAIY,IAAI,CAACZ,EAAE,CAAC,KAAK,UAAU,EAAE;QAC7Da,QAAQ,CAACb,EAAE,CAAC,GAAG,QAAQ,CAAC,CAAC;MAC7B,CAAC,MAAM,IAAIa,QAAQ,CAACb,EAAE,CAAC,KAAKc,SAAS,EAAE;QACnC,OAAOD,QAAQ,CAACb,EAAE,CAAC,CAAC,CAAC;MACzB;;MAEA;MACAe,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEH,QAAQ,CAAC;MAEjD,OAAOA,QAAQ;IACnB,CAAC,CAAC;IAEFE,OAAO,CAACC,GAAG,CAAC,iBAAiBhB,EAAE,cAAcW,IAAI,EAAE,CAAC;EACxD,CAAC;EAED,oBACI7B,OAAA;IAAKmC,SAAS,EAAC,sDAAsD;IAAAC,QAAA,gBACjEpC,OAAA;MAAImC,SAAS,EAAC,oBAAoB;MAAAC,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzDxC,OAAA;MAAOmC,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BpC,OAAA;QAAAoC,QAAA,eACIpC,OAAA;UAAImC,SAAS,EAAC,SAAS;UAAAC,QAAA,gBACnBpC,OAAA;YAAAoC,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrBxC,OAAA;YAAAoC,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACdxC,OAAA;YAAAoC,QAAA,EAAI;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACRxC,OAAA;QAAAoC,QAAA,EACKjC,UAAU,CAACsC,GAAG,CAAEC,SAAS,iBACtB1C,OAAA;UAAAoC,QAAA,gBACIpC,OAAA;YAAAoC,QAAA,EAAKM,SAAS,CAACvB;UAAI;YAAAkB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACzBxC,OAAA;YAAAoC,QAAA,EAAKM,SAAS,CAACtB;UAAK;YAAAiB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC1BxC,OAAA;YAAImC,SAAS,EAAC,YAAY;YAAAC,QAAA,gBACtBpC,OAAA;cAAOmC,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAChCpC,OAAA;gBACI6B,IAAI,EAAC,UAAU;gBACfc,OAAO,EAAEjC,aAAa,CAACgC,SAAS,CAACxB,EAAE,CAAC,KAAK,UAAW,CAAC;gBAAA;gBACrD0B,QAAQ,EAAEA,CAAA,KAAMhB,oBAAoB,CAACc,SAAS,CAACxB,EAAE,EAAE,SAAS;cAAE;gBAAAmB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACjE,CAAC,eACFxC,OAAA;gBAAMmC,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAC;cAAO;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClC,CAAC,eACRxC,OAAA;cAAOmC,SAAS,EAAC,mBAAmB;cAAAC,QAAA,gBAChCpC,OAAA;gBACI6B,IAAI,EAAC,UAAU;gBACfc,OAAO,EAAEjC,aAAa,CAACgC,SAAS,CAACxB,EAAE,CAAC,KAAK,QAAS,CAAC;gBAAA;gBACnD0B,QAAQ,EAAEA,CAAA,KAAMhB,oBAAoB,CAACc,SAAS,CAACxB,EAAE,EAAE,MAAM;cAAE;gBAAAmB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAC9D,CAAC,eACFxC,OAAA;gBAAMmC,SAAS,EAAC,MAAM;gBAAAC,QAAA,EAAC;cAAI;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC/B,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACR,CAAC;QAAA,GApBAE,SAAS,CAACxB,EAAE;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAqBjB,CACP;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACRxC,OAAA,CAACF,UAAU;MACPS,UAAU,EAAEA,UAAW;MACvBsC,UAAU,EAAC,WAAW;MACtBxC,WAAW,EAAEA,WAAY;MACzByC,YAAY,EAAEpB;IAAiB;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd;AAACtC,EAAA,CA/GuBD,eAAe;AAAA8C,EAAA,GAAf9C,eAAe;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}